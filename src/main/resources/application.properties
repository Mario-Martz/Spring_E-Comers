spring.application.name=E-comers

# Datasource configuration
#Especifica el driver JDBC a usar (en este caso, el de PostgreSQL).
spring.datasource.driver-class-name=org.postgresql.Driver
#URL de conexión a la base de datos (host, puerto y nombre de la base de datos).
spring.datasource.url=jdbc:postgresql://localhost:5432/pruebas_e_comers
#Usuario con el que te conectas a la base de datos.
spring.datasource.username=postgres
#Contraseña del usuario de la base de datos.
spring.datasource.password=postgres

# JPA / Hibernate configuration
#Le dice a Hibernate cómo manejar el esquema de la base de datos. update crea o actualiza las tablas automáticamente según tus entidades Java. Otras opciones: none, validate, create, create-drop.
spring.jpa.hibernate.ddl-auto=update
#Define el dialecto SQL que Hibernate usará para generar consultas específicas para PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Muestra las consultas SQL generadas por Hibernate en la consola. Útil para depuración.
spring.jpa.show-sql=true
#Formatea las consultas SQL para que se vean más legibles en la consola.
spring.jpa.properties.hibernate.format_sql=true

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
